## Reference: https://github.com/helm/chart-testing-action
name: Linting and Testing
on: pull_request

permissions:
  contents: read

jobs:
  linter-artifacthub:
    runs-on: ubuntu-latest
    container:
      image: public.ecr.aws/artifacthub/ah:v1.14.0
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run ah lint
        working-directory: ./charts
        run: ah lint

  chart-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
        with:
          version: v3.13.3 # Also update in publish.yaml

      - name: Set up python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: 3.9

      - name: Setup Chart Linting
        id: lint
        uses: helm/chart-testing-action@0d28d3144d3a25ea2cc349d6e59901c4ff469b3b # v2.7.0
        with:
          # Note: Also update in scripts/lint.sh
          version: v3.11.0

      - name: List changed charts
        id: list-changed
        run: |
          ## If executed with debug this won't work anymore.
          changed=$(ct --config ./.github/configs/ct-lint.yaml list-changed)
          charts=$(echo "$changed" | tr '\n' ' ' | xargs)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "changed_charts=$charts" >> $GITHUB_OUTPUT
          fi

      - name: Add dependency repositories
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add opencost https://opencost.github.io/opencost-helm-chart
          helm repo update

      - name: Run chart-testing (lint)
        run: ct lint --debug --config ./.github/configs/ct-lint.yaml --lint-conf ./.github/configs/lintconf.yaml

      - name: Verify chart dependencies
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          cd charts/kubeadapt
          helm dependency build
          # Check if dependencies are correctly resolved
          if [ $(find charts/ -name "prometheus-*.tgz" | wc -l) -eq 0 ] || [ $(find charts/ -name "opencost-*.tgz" | wc -l) -eq 0 ]; then
            echo "Dependencies not correctly resolved"
            echo "Expected to find prometheus-*.tgz and opencost-*.tgz in charts directory"
            ls -la charts/
            exit 1
          fi
          echo "Found dependencies:"
          ls -la charts/prometheus-*.tgz
          ls -la charts/opencost-*.tgz

      - name: Run docs-testing (helm-docs)
        id: helm-docs
        run: |
          ./scripts/helm-docs.sh
          if [[ $(git diff --stat) != '' ]]; then
            echo -e '\033[0;31mDocumentation outdated!\033[0m ❌'
            git diff --color
            exit 1
          else
            echo -e '\033[0;32mDocumentation up to date\033[0m ✔'
          fi

      - name: Test chart installation (dry-run)
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          # Test with default values
          helm install kubeadapt-test ./charts/kubeadapt --dry-run

          # Test with Prometheus enabled
          helm install kubeadapt-test ./charts/kubeadapt --set prometheus.enabled=true --dry-run

          # Test with OpenCost enabled
          helm install kubeadapt-test ./charts/kubeadapt --set opencost.enabled=true --dry-run

          # Test with both enabled
          helm install kubeadapt-test ./charts/kubeadapt \
            --set prometheus.enabled=true \
            --set opencost.enabled=true \
            --dry-run

          # Test agent configuration
          helm template ./charts/kubeadapt -s templates/agent/* | kubectl apply --dry-run=client -f -

          # Test coreapi configuration
          helm template ./charts/kubeadapt -s templates/coreapi/* | kubectl apply --dry-run=client -f -

      # Only create cluster if all previous steps pass
      - name: Create kind cluster
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        if: steps.list-changed.outputs.changed == 'true'
        with:
          config: .github/configs/kind-config.yaml

      - name: Run chart-testing (install)
        run: ct install --config ./.github/configs/ct-install.yaml
        if: steps.list-changed.outputs.changed == 'true'
